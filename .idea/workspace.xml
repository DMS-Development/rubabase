<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5a6f0478-cd3c-4df5-be8f-bded29e37b76" name="Changes" comment="updated rubabase_initializer.rb.tt to include a private or public variable.&#10;&#10;Updated install_generator.rb to include instruction to set private or public variable in encrypted variables.&#10;&#10;updated gemspec to include gem dependencies and file dependency for rubabase_initializer.rb.tt.&#10;&#10;removed code from bucket.rb as It's unnecessary to have Supabases limited bucket API operations in anything besides client.rb.&#10;&#10;Refactored bucket.rb code into client.rb.&#10;&#10;Added configuration class to allow for singleton instance creation of Supabase client.rb.&#10;&#10;Updated blob_object.rb to take Supabase client.rb singleton instance as initializer with optional new bucket parameter.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Ruby Module" />
        <option value="RBS Class" />
        <option value="ERB File" />
        <option value="Ruby Class" />
        <option value="Ruby File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;DMS-Development&quot;
  }
}</component>
  <component name="GitHubPullRequestState">{
  &quot;prStates&quot;: [
  ]
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/DMS-Development/rubabase&quot;,
    &quot;accountId&quot;: &quot;9ef8ac5a-ac05-4e57-b3c7-be0f5019423e&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/activestorage-7.1.3/lib/active_storage/service.rb" root0="SKIP_INSPECTION" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2cOWFShcQfkSIDLTq2lCXmbsrLQ" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
    <option name="showScratchesAndConsoles" value="false" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;HTTP Request.rest-api | #1.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.rest-api | #2.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.rest-api_2 | #1.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/davidshimenko/RubyMine/rubabase&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.stylelint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.stylelint&quot;: &quot;&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;ruby.structure.view.model.defaults.configured&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/lib/generators/rubabase/install" />
      <recent name="$PROJECT_DIR$/lib/generators/rubabase" />
      <recent name="$PROJECT_DIR$/lib/generators/" />
      <recent name="$PROJECT_DIR$/lib/rubabase" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="excludedTypes">
      <set>
        <option value="HttpClient.HttpRequestRunConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="HTTP Request.rest-api | #1">
    <configuration name="rest-api | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/rest-api.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="rest-api | #2" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/rest-api.http" index="2" requestIdentifier="#2" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="rest-api_2 | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/rest-api_2.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.rest-api | #1" />
        <item itemvalue="HTTP Request.rest-api | #2" />
        <item itemvalue="HTTP Request.rest-api_2 | #1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-RM-241.14494.234" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SpringUtil" SPRING_PRE_LOADER_OPTION="true" RAKE_SPRING_PRE_LOADER_OPTION="true" RAILS_SPRING_PRE_LOADER_OPTION="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5a6f0478-cd3c-4df5-be8f-bded29e37b76" name="Changes" comment="" />
      <created>1707983001349</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1707983001349</updated>
      <workItem from="1707983002386" duration="8131000" />
      <workItem from="1707991798244" duration="72000" />
      <workItem from="1707991883379" duration="24923000" />
      <workItem from="1708122767612" duration="6063000" />
      <workItem from="1708128866553" duration="24228000" />
      <workItem from="1709240776112" duration="22000" />
      <workItem from="1713478691014" duration="317000" />
    </task>
    <task id="LOCAL-00001" summary="Project initialization commit.">
      <option name="closed" value="true" />
      <created>1707984194329</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1707984194329</updated>
    </task>
    <task id="LOCAL-00002" summary="Implemented initial project setup.&#10;&#10;Created a basic implementation of an instantiatable Supabase client that will have access to all API endpoints. - blob_object.rb, client.rb, bucket.rb, storage.rb&#10;&#10;Created a basic integration with ActiveStorage to allow for users to use these common methods with their objects in good ol' rails fashion (; - supabase_storage_service.rb&#10;`&#10;• upload&#10;• download&#10;• delete&#10;• delete_prefixed&#10;• exist?&#10;• url&#10;`&#10;&#10;Created a generator that users can run to automatically set up their storage.yml file to work with Supabase, users just have to set up their credentials within encrypted credentials and it will be good to go.&#10;&#10;Added rails and rest-client dependencies.">
      <option name="closed" value="true" />
      <created>1708131642099</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1708131642099</updated>
    </task>
    <task id="LOCAL-00003" summary="Finished basic implementation of methods from ActiveStorage::Service. Gem should be capable of working fully with ActiveStorage now. No error handling yet so be careful.">
      <option name="closed" value="true" />
      <created>1708137258736</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1708137258736</updated>
    </task>
    <task id="LOCAL-00004" summary="Updated .gitignore for *.gem.&#10;&#10;Created configuration.rb and added an initializer to allow for singleton instance of Supabase client.&#10;&#10;Created initializer template.">
      <option name="closed" value="true" />
      <created>1708146334953</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1708146334953</updated>
    </task>
    <task id="LOCAL-00005" summary="updated rubabase_initializer.rb.tt to include a private or public variable.&#10;&#10;Updated install_generator.rb to include instruction to set private or public variable in encrypted variables.&#10;&#10;updated gemspec to include gem dependencies and file dependency for rubabase_initializer.rb.tt.&#10;&#10;removed code from bucket.rb as It's unnecessary to have Supabases limited bucket API operations in anything besides client.rb.&#10;&#10;Refactored bucket.rb code into client.rb.&#10;&#10;Added configuration class to allow for singleton instance creation of Supabase client.rb.&#10;&#10;Updated blob_object.rb to take Supabase client.rb singleton instance as initializer with optional new bucket parameter.">
      <option name="closed" value="true" />
      <created>1708158895255</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1708158895255</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Project initialization commit." />
    <MESSAGE value="Implemented initial project setup.&#10;&#10;Created a basic implementation of an instantiatable Supabase client that will have access to all API endpoints. - blob_object.rb, client.rb, bucket.rb, storage.rb&#10;&#10;Created a basic integration with ActiveStorage to allow for users to use these common methods with their objects in good ol' rails fashion (; - supabase_storage_service.rb&#10;`&#10;• upload&#10;• download&#10;• delete&#10;• delete_prefixed&#10;• exist?&#10;• url&#10;`&#10;&#10;Created a generator that users can run to automatically set up their storage.yml file to work with Supabase, users just have to set up their credentials within encrypted credentials and it will be good to go.&#10;&#10;Added rails and rest-client dependencies." />
    <MESSAGE value="Finished basic implementation of methods from ActiveStorage::Service. Gem should be capable of working fully with ActiveStorage now. No error handling yet so be careful." />
    <MESSAGE value="Updated .gitignore for *.gem.&#10;&#10;Created configuration.rb and added an initializer to allow for singleton instance of Supabase client.&#10;&#10;Created initializer template." />
    <MESSAGE value="updated rubabase_initializer.rb.tt to include a private or public variable.&#10;&#10;Updated install_generator.rb to include instruction to set private or public variable in encrypted variables.&#10;&#10;updated gemspec to include gem dependencies and file dependency for rubabase_initializer.rb.tt.&#10;&#10;removed code from bucket.rb as It's unnecessary to have Supabases limited bucket API operations in anything besides client.rb.&#10;&#10;Refactored bucket.rb code into client.rb.&#10;&#10;Added configuration class to allow for singleton instance creation of Supabase client.rb.&#10;&#10;Updated blob_object.rb to take Supabase client.rb singleton instance as initializer with optional new bucket parameter." />
    <option name="LAST_COMMIT_MESSAGE" value="updated rubabase_initializer.rb.tt to include a private or public variable.&#10;&#10;Updated install_generator.rb to include instruction to set private or public variable in encrypted variables.&#10;&#10;updated gemspec to include gem dependencies and file dependency for rubabase_initializer.rb.tt.&#10;&#10;removed code from bucket.rb as It's unnecessary to have Supabases limited bucket API operations in anything besides client.rb.&#10;&#10;Refactored bucket.rb code into client.rb.&#10;&#10;Added configuration class to allow for singleton instance creation of Supabase client.rb.&#10;&#10;Updated blob_object.rb to take Supabase client.rb singleton instance as initializer with optional new bucket parameter." />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>