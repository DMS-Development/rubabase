<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5a6f0478-cd3c-4df5-be8f-bded29e37b76" name="Changes" comment="Implemented initial project setup.&#10;&#10;Created a basic implementation of an instantiatable Supabase client that will have access to all API endpoints. - blob_object.rb, client.rb, bucket.rb, storage.rb&#10;&#10;Created a basic integration with ActiveStorage to allow for users to use these common methods with their objects in good ol' rails fashion (; - supabase_storage_service.rb&#10;`&#10;• upload&#10;• download&#10;• delete&#10;• delete_prefixed&#10;• exist?&#10;• url&#10;`&#10;&#10;Created a generator that users can run to automatically set up their storage.yml file to work with Supabase, users just have to set up their credentials within encrypted credentials and it will be good to go.&#10;&#10;Added rails and rest-client dependencies.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/ActiveStorage/Service/supabase_storage_service.rb" beforeDir="false" afterPath="$PROJECT_DIR$/lib/ActiveStorage/Service/supabase_storage_service.rb" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Ruby Module" />
        <option value="RBS Class" />
        <option value="Ruby File" />
        <option value="ERB File" />
        <option value="Ruby Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;DMS-Development&quot;
  }
}</component>
  <component name="GitHubPullRequestState">{
  &quot;prStates&quot;: [
  ]
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/DMS-Development/rubabase&quot;,
    &quot;accountId&quot;: &quot;9ef8ac5a-ac05-4e57-b3c7-be0f5019423e&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/activestorage-7.1.3/lib/active_storage/service.rb" root0="SKIP_INSPECTION" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2cOWFShcQfkSIDLTq2lCXmbsrLQ" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
    <option name="showScratchesAndConsoles" value="false" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "HTTP Request.rest-api | #1.executor": "Run",
    "HTTP Request.rest-api_2 | #1.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/Users/davidshimenko/RubyMine/rubabase",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.stylelint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.stylelint": "",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "ruby.structure.view.model.defaults.configured": "true",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/lib/generators/rubabase/install" />
      <recent name="$PROJECT_DIR$/lib/generators/rubabase" />
      <recent name="$PROJECT_DIR$/lib/generators/" />
      <recent name="$PROJECT_DIR$/lib/rubabase" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="excludedTypes">
      <set>
        <option value="HttpClient.HttpRequestRunConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="HTTP Request.rest-api | #1">
    <configuration name="rest-api | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/rest-api.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="rest-api | #2" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/rest-api.http" index="2" requestIdentifier="#2" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="rest-api_2 | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/rest-api_2.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.rest-api | #1" />
        <item itemvalue="HTTP Request.rest-api | #2" />
        <item itemvalue="HTTP Request.rest-api_2 | #1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-e293885f7bc4-JavaScript-RM-241.12662.50" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SpringUtil" SPRING_PRE_LOADER_OPTION="true" RAKE_SPRING_PRE_LOADER_OPTION="true" RAILS_SPRING_PRE_LOADER_OPTION="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5a6f0478-cd3c-4df5-be8f-bded29e37b76" name="Changes" comment="" />
      <created>1707983001349</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1707983001349</updated>
      <workItem from="1707983002386" duration="8131000" />
      <workItem from="1707991798244" duration="72000" />
      <workItem from="1707991883379" duration="24923000" />
      <workItem from="1708122767612" duration="6063000" />
      <workItem from="1708128866553" duration="7898000" />
    </task>
    <task id="LOCAL-00001" summary="Project initialization commit.">
      <option name="closed" value="true" />
      <created>1707984194329</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1707984194329</updated>
    </task>
    <task id="LOCAL-00002" summary="Implemented initial project setup.&#10;&#10;Created a basic implementation of an instantiatable Supabase client that will have access to all API endpoints. - blob_object.rb, client.rb, bucket.rb, storage.rb&#10;&#10;Created a basic integration with ActiveStorage to allow for users to use these common methods with their objects in good ol' rails fashion (; - supabase_storage_service.rb&#10;`&#10;• upload&#10;• download&#10;• delete&#10;• delete_prefixed&#10;• exist?&#10;• url&#10;`&#10;&#10;Created a generator that users can run to automatically set up their storage.yml file to work with Supabase, users just have to set up their credentials within encrypted credentials and it will be good to go.&#10;&#10;Added rails and rest-client dependencies.">
      <option name="closed" value="true" />
      <created>1708131642099</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1708131642099</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Project initialization commit." />
    <MESSAGE value="Implemented initial project setup.&#10;&#10;Created a basic implementation of an instantiatable Supabase client that will have access to all API endpoints. - blob_object.rb, client.rb, bucket.rb, storage.rb&#10;&#10;Created a basic integration with ActiveStorage to allow for users to use these common methods with their objects in good ol' rails fashion (; - supabase_storage_service.rb&#10;`&#10;• upload&#10;• download&#10;• delete&#10;• delete_prefixed&#10;• exist?&#10;• url&#10;`&#10;&#10;Created a generator that users can run to automatically set up their storage.yml file to work with Supabase, users just have to set up their credentials within encrypted credentials and it will be good to go.&#10;&#10;Added rails and rest-client dependencies." />
    <option name="LAST_COMMIT_MESSAGE" value="Implemented initial project setup.&#10;&#10;Created a basic implementation of an instantiatable Supabase client that will have access to all API endpoints. - blob_object.rb, client.rb, bucket.rb, storage.rb&#10;&#10;Created a basic integration with ActiveStorage to allow for users to use these common methods with their objects in good ol' rails fashion (; - supabase_storage_service.rb&#10;`&#10;• upload&#10;• download&#10;• delete&#10;• delete_prefixed&#10;• exist?&#10;• url&#10;`&#10;&#10;Created a generator that users can run to automatically set up their storage.yml file to work with Supabase, users just have to set up their credentials within encrypted credentials and it will be good to go.&#10;&#10;Added rails and rest-client dependencies." />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>